import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

def commonProjects = [
        "core",
        "v1_8_R3",
        "v1_9_R1",
        "v1_9_R2",
        "v1_10_R1",
        "v1_11_R1",
        "v1_12_R1",
        "v1_13_R1",
        "v1_21_R1",
        "v1_21_R2",
        "v1_21_R3"
]

tasks.register("libShadowJar", ShadowJar) {
    archiveBaseName = rootProject.name
    archiveVersion = rootProject.version as String
    archiveClassifier = null

    commonProjects.each { prjName ->
        def prj = project(":$prjName")
        dependsOn prj.tasks.named("classes")
        from { prj.extensions.getByType(JavaPluginExtension).sourceSets.named("main").get().output }
    }

}

tasks.register("pluginShadowJar", ShadowJar) {
    archiveBaseName = rootProject.name
    archiveVersion = rootProject.version as String
    archiveClassifier = null
    archiveAppendix = "plugin"

    commonProjects.each { prjName ->
        def prj = project(":$prjName")
        dependsOn prj.tasks.named("classes")
        from { prj.extensions.getByType(JavaPluginExtension).sourceSets.named("main").get().output }
    }

    def pluginPrj = project(":plugin")
    dependsOn pluginPrj.tasks.named("classes")
    from { pluginPrj.extensions.getByType(JavaPluginExtension).sourceSets.named("main").get().output }
}
