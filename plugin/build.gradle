plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = rootProject.group
version = rootProject.version

dependencies {
    //noinspection VulnerableLibrariesLocal
    compileOnly libs.paper
    implementation project(":core")

    implementation project(":v1_8_R3")
    implementation project(":v1_12_R1")
    implementation project(":v1_21_R3")
}

shadowJar {
    archiveBaseName = rootProject.name
    archiveVersion = version as String
    archiveClassifier = null
    archiveAppendix = "plugin"
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
